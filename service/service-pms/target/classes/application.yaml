server:
  port: 8001 # 服务端口

spring:
  application:
    name: service-pms # 服务名
  profiles:
    active: dev # 环境设置:dev、test、prod
  datasource: # 数据库连接
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/meikuang?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
    initialSize: 5 # 初始化时建立物理连接的个数
    minIdel: 5 # 最小连接池数量
    maxActive: 20 # 最大连接池数量
    maxWait: 60000 # 获取连接时最大等待时间，单位毫秒
    timeBetweenEvictionRunsMillis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 又作为testWhileIdel执行的依据
    minEvictableIdleTimeMillis: 300000 # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
    validationQuery: SELECT 1 FROM DUAL # 用来检测连接是否有效的sql 必须是一个查询语句
    testWhileIdel: true # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testOnBorrow: false # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    testOnReturn: false # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    poolPreparedStatements: true # 是否缓存preparedStatement,mysql5.5+建议开启
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #stat：Druid内置提供一个StatFilter,用于统计监控信息。
    #wall：Druid防御SQL注入攻击的WallFilter就是通过Druid的SQL Parser分析。Druid提供的SQL Parser可以在JDBC层拦截SQL做相应处理，比如说分库分表、审计等。
    #log4j：这个就是日志记录的功能，可以把sql语句打印到log4j供排查问题。
    filters: stat,wall,log4j2
    maxPoolPreparedStatementPerConnectionSize: 20 # 当值大于0时poolPreparedStatements会自动修改为true
    useGlobalDataSourceStat: true # 合并多个DruidDataSource的监控数据
    connectProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss # 设置返回json数据时的全局时间格式,默认情况下json时间格式带有时区，并且是世界标准时间，和我们的时间差了八个小时
    time-zone: GMT+8
  jpa:
    show-sql: true